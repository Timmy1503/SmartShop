@model ConnectDb.EF.HelpQuestion

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section header{
    Chỉnh sửa câu hỏi
}
@section jsFooter{
    <script>

        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/admin/js/Plugins/ckeditor/config.js',
        });

        var editor = CKEDITOR.replace('txtContent1', {
            customConfig: '/Assets/admin/js/Plugins/ckeditor/config.js',
        });
    </script>
}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-primary">
                <h2 class="card-title ">Chỉnh sửa câu hỏi (FAQ)</h2>

            </div>
            <div class="card-body">
                <div class="table-responsive">
                    @using (Html.BeginForm("Edit", "Help", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.HelpQuestionID)
                        <div class="form-horizontal">


                            <div class="form-group">
                                @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.MetaTitle, new { @class = "form-control", @id = "txtContent" })
                                    @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id = "txtContent1" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.DisplayOrder, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.CreateBy, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.ModifiedBy, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(model => model.Status, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Cập nhật" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>
<div class="btn btn-success">
    <i class="fas fa-arrow-circle-left"></i>
    <span>@Html.ActionLink("Quay lại", "Index", null, new { @style = "color: #fff;" })</span>
</div>